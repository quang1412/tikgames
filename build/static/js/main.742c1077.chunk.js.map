{"version":3,"sources":["serviceWorker.js","components/footer.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Footer","className","href","target","to","i","toast","wait","t","Promise","resolve","setTimeout","imageUrlFixing","url","replace","randomInt","min","max","Math","floor","random","Loading","LazyHomePage","React","lazy","HomePage","fallback","WheelMng","MngWheelGame","WheelGame","WidgetWheelOfFortune","useOutletContext","event","settings","LazyWidgetPage","WidgetPage","GeneralLayout","style","paddingTop","minHeight","theme","position","toastStyle","fontSize","textAlign","hideProgressBar","id","Main","path","element","index","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.742c1077.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Footer() {\n  return (\n    <footer className=\"container mt-3 mt-md-0 d-flex justify-content-between py-2\">\n      <div>\n        Developed by\n        <a href=\"https://fb.com/trinhdacquang\" target=\"_blank\">\n          {\" \"}\n          QuangPlus\n        </a>\n      </div>\n      <div>\n        <Link className=\"me-4\" to=\"/\">\n          Trang chá»§\n        </Link>\n        <a className=\"me-4\" href=\"https://fb.com/trinhdacquang\" target=\"_blank\">\n          Facebook\n        </a>\n        <a className=\"me-4\" href=\"https://tiktok.com\" target=\"_blank\">\n          Tiktok\n        </a>\n        <a className=\"me-4\" href=\"https://zalo.me/0794014600\" target=\"_blank\">\n          Zalo\n        </a>\n      </div>\n    </footer>\n  )\n}\n","import React, { Suspense } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Outlet,\n  useOutletContext,\n  Link,\n} from \"react-router-dom\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport { MDBContainer } from \"mdb-react-ui-kit\"\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\"\n// import \"@fortawesome/fontawesome-free/css/all.min.css\"\nimport \"./index.css\"\nimport \"./libs/css/gradientBg.css\"\nimport \"./libs/css/Animate.min.css\"\n// import HomePage from \"./pages/homePage\"\nimport Footer from \"./components/footer\"\n\nwindow.toast = toast\n\nwindow.wait = async (t = 1) => {\n  return new Promise((resolve) => setTimeout(() => resolve, t * 1000))\n}\n\nwindow.imageUrlFixing = (url = \"\") => {\n  return url.replace(\"p16-sign-va.tiktokcdn.com\", \"p16-va.tiktokcdn.com\")\n}\n\nwindow.randomInt = (min = 10, max = 99) =>\n  Math.floor(Math.random() * (max - min + 1) + min)\n\nconst Loading = () => {\n  return <></>\n}\n\nconst LazyHomePage = React.lazy(() => import(\"./pages/homePage\"))\nconst HomePage = (\n  <Suspense fallback={<Loading />}>\n    <LazyHomePage />\n  </Suspense>\n)\n\nconst WheelMng = React.lazy(() => import(\"./App\"))\nconst MngWheelGame = (\n  <Suspense fallback={<Loading />}>\n    <WheelMng />\n  </Suspense>\n)\n\nconst WheelGame = React.lazy(() => import(\"./games/wheelOfFortune\"))\nconst WidgetWheelOfFortune = () => {\n  const [event, settings] = useOutletContext()\n  return (\n    <Suspense fallback={<Loading />}>\n      <WheelGame event={event} settings={settings} />\n    </Suspense>\n  )\n}\n\nconst LazyWidgetPage = React.lazy(() => import(\"./widgetPage\"))\nconst WidgetPage = (\n  <Suspense fallback={<Loading />}>\n    <LazyWidgetPage />\n  </Suspense>\n)\n\nconst GeneralLayout = (\n  <>\n    <MDBContainer\n      style={{\n        paddingTop: \"30px\",\n        minHeight: \"calc(100vh - 40px)\",\n      }}\n    >\n      <Outlet />\n    </MDBContainer>\n    <Footer />\n\n    <ToastContainer\n      theme=\"light\"\n      position=\"bottom-right\"\n      toastStyle={{\n        fontSize: \"14px\",\n        textAlign: \"left\",\n      }}\n      hideProgressBar={false}\n    />\n    <div id=\"gradient_bg\"></div>\n  </>\n)\n\nconst Main = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={GeneralLayout}>\n          <Route index element={HomePage} />\n          <Route path=\"wheel-of-fortune\" element={MngWheelGame} />\n          <Route\n            path=\"*\"\n            element={\n              <div className=\"text-center\">\n                <h5>ERROR! Page not found</h5>\n              </div>\n            }\n          />\n        </Route>\n        <Route path=\"widget\" element={WidgetPage}>\n          <Route path=\"wheel-of-fortune\" element={<WidgetWheelOfFortune />} />\n        </Route>\n      </Routes>\n    </Router>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}