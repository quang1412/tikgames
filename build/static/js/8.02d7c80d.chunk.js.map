{"version":3,"sources":["widgetPage/index.jsx"],"names":["socket","io","path","query","cid","URLSearchParams","document","location","search","get","Widget","useState","event","setEvent","settings","updateSettings","isConnected","setIsConnected","useEffect","on","data","action","name","off","context"],"mappings":"2PAKMA,EAASC,YAAG,UAAW,CAC3BC,KAAM,UACNC,MAAO,CACLC,IAAK,IAAIC,gBAAgBC,SAASC,SAASC,QAAQC,IAAI,UAI5C,SAASC,IACtB,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAmCF,mBAAS,IAAG,mBAAxCG,EAAQ,KAAEC,EAAc,KAC/B,EAAsCJ,oBAAS,GAAM,mBAA9CK,EAAW,KAAEC,EAAc,KA2BlC,OAzBAC,qBAAU,WAaR,OAZAlB,EAAOmB,GAAG,WAAW,kBAAMF,GAAe,MAC1CjB,EAAOmB,GAAG,cAAc,kBAAMF,GAAe,MAE7CjB,EAAOmB,GAAG,kBAAkB,SAACC,GAAI,OAAKL,EAAeK,MACrDpB,EAAOmB,GAAG,WAAW,SAACE,GAAM,OAAKR,EAAS,CAAES,KAAMD,OAElDrB,EAAOmB,GAAG,eAAe,SAACC,GAAI,OAAKP,EAASO,MAC5CpB,EAAOmB,GAAG,eAAe,SAACC,GAAI,OAAKP,EAASO,MAC5CpB,EAAOmB,GAAG,eAAe,SAACC,GAAI,OAAKP,EAASO,MAC5CpB,EAAOmB,GAAG,gBAAgB,SAACC,GAAI,OAAKP,EAASO,MAC7CpB,EAAOmB,GAAG,iBAAiB,SAACC,GAAI,OAAKP,EAASO,MAEvC,WACLpB,EAAOuB,IAAI,WACXvB,EAAOuB,IAAI,cACXvB,EAAOuB,IAAI,kBACXvB,EAAOuB,IAAI,eACXvB,EAAOuB,IAAI,iBACXvB,EAAOuB,IAAI,gBACXvB,EAAOuB,IAAI,eACXvB,EAAOuB,IAAI,kBAEZ,IAEIP,EACL,kBAAC,IAAM,CAACQ,QAAS,CAACZ,EAAOE,KAEzB","file":"static/js/8.02d7c80d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport io from \"socket.io-client\"\nimport \"./style.module.css\"\n\nimport { Outlet } from \"react-router-dom\"\nconst socket = io(\"/widget\", {\n  path: \"/socket\",\n  query: {\n    cid: new URLSearchParams(document.location.search).get(\"cid\"),\n  },\n})\n\nexport default function Widget() {\n  const [event, setEvent] = useState({})\n  const [settings, updateSettings] = useState({})\n  const [isConnected, setIsConnected] = useState(false)\n\n  useEffect(() => {\n    socket.on(\"connect\", () => setIsConnected(true))\n    socket.on(\"disconnect\", () => setIsConnected(false))\n\n    socket.on(\"updateSettings\", (data) => updateSettings(data))\n    socket.on(\"control\", (action) => setEvent({ name: action }))\n\n    socket.on(\"tiktok-gift\", (data) => setEvent(data))\n    socket.on(\"tiktok-chat\", (data) => setEvent(data))\n    socket.on(\"tiktok-like\", (data) => setEvent(data))\n    socket.on(\"tiktok-share\", (data) => setEvent(data))\n    socket.on(\"tiktok-follow\", (data) => setEvent(data))\n\n    return () => {\n      socket.off(\"connect\")\n      socket.off(\"disconnect\")\n      socket.off(\"uodateSettings\")\n      socket.off(\"tiktok-gift\")\n      socket.off(\"tiktok-follow\")\n      socket.off(\"tiktok-share\")\n      socket.off(\"tiktok-like\")\n      socket.off(\"tiktok-chat\")\n    }\n  }, [])\n\n  return isConnected ? (\n    <Outlet context={[event, settings]} />\n  ) : (\n    <h5>server connecting...</h5>\n  )\n}\n"],"sourceRoot":""}