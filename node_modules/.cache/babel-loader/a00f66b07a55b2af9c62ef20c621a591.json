{"ast":null,"code":"import _defineProperty from \"/Users/trinhdacquang/React/tikgames/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/trinhdacquang/React/tikgames/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/trinhdacquang/React/tikgames/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/trinhdacquang/React/tikgames/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/trinhdacquang/React/tikgames/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _excluded = [\"theme\", \"type\"],\n  _excluded2 = [\"delay\", \"staleId\"];\nimport e, { isValidElement as t, useRef as n, useLayoutEffect as o, useEffect as s, useReducer as a, useState as r, cloneElement as i, forwardRef as c } from \"react\";\nimport l from \"clsx\";\nfunction u(e) {\n  return \"number\" == typeof e && !isNaN(e);\n}\nfunction d(e) {\n  return \"boolean\" == typeof e;\n}\nfunction p(e) {\n  return \"string\" == typeof e;\n}\nfunction m(e) {\n  return \"function\" == typeof e;\n}\nfunction f(e) {\n  return p(e) || m(e) ? e : null;\n}\nfunction g(e) {\n  return 0 === e || e;\n}\nfunction y(e) {\n  return t(e) || p(e) || m(e) || u(e);\n}\nvar h = {\n    TOP_LEFT: \"top-left\",\n    TOP_RIGHT: \"top-right\",\n    TOP_CENTER: \"top-center\",\n    BOTTOM_LEFT: \"bottom-left\",\n    BOTTOM_RIGHT: \"bottom-right\",\n    BOTTOM_CENTER: \"bottom-center\"\n  },\n  T = {\n    INFO: \"info\",\n    SUCCESS: \"success\",\n    WARNING: \"warning\",\n    ERROR: \"error\",\n    DEFAULT: \"default\"\n  };\nfunction v(e, t, n) {\n  void 0 === n && (n = 300);\n  var o = e.scrollHeight,\n    s = e.style;\n  requestAnimationFrame(function () {\n    s.minHeight = \"initial\", s.height = o + \"px\", s.transition = \"all \" + n + \"ms\", requestAnimationFrame(function () {\n      s.height = \"0\", s.padding = \"0\", s.margin = \"0\", setTimeout(t, n);\n    });\n  });\n}\nfunction E(t) {\n  var a = t.enter,\n    r = t.exit,\n    _t$appendPosition = t.appendPosition,\n    i = _t$appendPosition === void 0 ? !1 : _t$appendPosition,\n    _t$collapse = t.collapse,\n    c = _t$collapse === void 0 ? !0 : _t$collapse,\n    _t$collapseDuration = t.collapseDuration,\n    l = _t$collapseDuration === void 0 ? 300 : _t$collapseDuration;\n  return function (t) {\n    var u = t.children,\n      d = t.position,\n      p = t.preventExitTransition,\n      m = t.done,\n      f = t.nodeRef,\n      g = t.isIn;\n    var y = i ? a + \"--\" + d : a,\n      h = i ? r + \"--\" + d : r,\n      T = n(),\n      E = n(0);\n    function b(e) {\n      if (e.target !== f.current) return;\n      var t = f.current;\n      t.dispatchEvent(new Event(\"d\")), t.removeEventListener(\"animationend\", b), t.removeEventListener(\"animationcancel\", b), 0 === E.current && \"animationcancel\" !== e.type && (t.className = T.current);\n    }\n    function C() {\n      var e = f.current;\n      e.removeEventListener(\"animationend\", C), c ? v(e, m, l) : m();\n    }\n    return o(function () {\n      !function () {\n        var e = f.current;\n        T.current = e.className, e.className += \" \" + y, e.addEventListener(\"animationend\", b), e.addEventListener(\"animationcancel\", b);\n      }();\n    }, []), s(function () {\n      g || (p ? C() : function () {\n        E.current = 1;\n        var e = f.current;\n        e.className += \" \" + h, e.addEventListener(\"animationend\", C);\n      }());\n    }, [g]), e.createElement(e.Fragment, null, u);\n  };\n}\nfunction b(e, t) {\n  return {\n    content: e.content,\n    containerId: e.props.containerId,\n    id: e.props.toastId,\n    theme: e.props.theme,\n    type: e.props.type,\n    data: e.props.data || {},\n    isLoading: e.props.isLoading,\n    icon: e.props.icon,\n    status: t\n  };\n}\nvar C = {\n    list: new Map(),\n    emitQueue: new Map(),\n    on: function on(e, t) {\n      return this.list.has(e) || this.list.set(e, []), this.list.get(e).push(t), this;\n    },\n    off: function off(e, t) {\n      if (t) {\n        var _n = this.list.get(e).filter(function (e) {\n          return e !== t;\n        });\n        return this.list.set(e, _n), this;\n      }\n      return this.list.delete(e), this;\n    },\n    cancelEmit: function cancelEmit(e) {\n      var t = this.emitQueue.get(e);\n      return t && (t.forEach(clearTimeout), this.emitQueue.delete(e)), this;\n    },\n    emit: function emit(e) {\n      var _arguments = arguments,\n        _this = this;\n      this.list.has(e) && this.list.get(e).forEach(function (t) {\n        var n = setTimeout(function () {\n          t.apply(void 0, _toConsumableArray([].slice.call(_arguments, 1)));\n        }, 0);\n        _this.emitQueue.has(e) || _this.emitQueue.set(e, []), _this.emitQueue.get(e).push(n);\n      });\n    }\n  },\n  _ = function _(t) {\n    var n = t.theme,\n      o = t.type,\n      s = _objectWithoutProperties(t, _excluded);\n    return e.createElement(\"svg\", _objectSpread({\n      viewBox: \"0 0 24 24\",\n      width: \"100%\",\n      height: \"100%\",\n      fill: \"colored\" === n ? \"currentColor\" : \"var(--toastify-icon-color-\" + o + \")\"\n    }, s));\n  },\n  I = {\n    info: function info(t) {\n      return e.createElement(_, _objectSpread({}, t), e.createElement(\"path\", {\n        d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n      }));\n    },\n    warning: function warning(t) {\n      return e.createElement(_, _objectSpread({}, t), e.createElement(\"path\", {\n        d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n      }));\n    },\n    success: function success(t) {\n      return e.createElement(_, _objectSpread({}, t), e.createElement(\"path\", {\n        d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n      }));\n    },\n    error: function error(t) {\n      return e.createElement(_, _objectSpread({}, t), e.createElement(\"path\", {\n        d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n      }));\n    },\n    spinner: function spinner() {\n      return e.createElement(\"div\", {\n        className: \"Toastify__spinner\"\n      });\n    }\n  };\nfunction O(e) {\n  var _a = a(function (e) {\n      return e + 1;\n    }, 0),\n    _a2 = _slicedToArray(_a, 2),\n    o = _a2[1],\n    _r = r([]),\n    _r2 = _slicedToArray(_r, 2),\n    c = _r2[0],\n    l = _r2[1],\n    h = n(null),\n    T = n(new Map()).current,\n    v = function v(e) {\n      return -1 !== c.indexOf(e);\n    },\n    E = n({\n      toastKey: 1,\n      displayedToast: 0,\n      count: 0,\n      queue: [],\n      props: e,\n      containerId: null,\n      isToastActive: v,\n      getToast: function getToast(e) {\n        return T.get(e);\n      }\n    }).current;\n  function _(e) {\n    var t = e.containerId;\n    var n = E.props.limit;\n    !n || t && E.containerId !== t || (E.count -= E.queue.length, E.queue = []);\n  }\n  function O(e) {\n    l(function (t) {\n      return g(e) ? t.filter(function (t) {\n        return t !== e;\n      }) : [];\n    });\n  }\n  function L() {\n    var _E$queue$shift = E.queue.shift(),\n      e = _E$queue$shift.toastContent,\n      t = _E$queue$shift.toastProps,\n      n = _E$queue$shift.staleId;\n    P(e, t, n);\n  }\n  function N(e, n) {\n    var s = n.delay,\n      a = n.staleId,\n      r = _objectWithoutProperties(n, _excluded2);\n    if (!y(e) || function (e) {\n      return !h.current || E.props.enableMultiContainer && e.containerId !== E.props.containerId || T.has(e.toastId) && null == e.updateId;\n    }(r)) return;\n    var c = r.toastId,\n      l = r.updateId,\n      v = r.data,\n      _ = E.props,\n      N = function N() {\n        return O(c);\n      },\n      x = null == l;\n    x && E.count++;\n    var B = {\n      toastId: c,\n      updateId: l,\n      containerId: r.containerId,\n      isLoading: r.isLoading,\n      theme: r.theme || _.theme,\n      icon: null != r.icon ? r.icon : _.icon,\n      isIn: !1,\n      key: r.key || E.toastKey++,\n      type: r.type,\n      closeToast: N,\n      closeButton: r.closeButton,\n      rtl: _.rtl,\n      position: r.position || _.position,\n      transition: r.transition || _.transition,\n      className: f(r.className || _.toastClassName),\n      bodyClassName: f(r.bodyClassName || _.bodyClassName),\n      style: r.style || _.toastStyle,\n      bodyStyle: r.bodyStyle || _.bodyStyle,\n      onClick: r.onClick || _.onClick,\n      pauseOnHover: d(r.pauseOnHover) ? r.pauseOnHover : _.pauseOnHover,\n      pauseOnFocusLoss: d(r.pauseOnFocusLoss) ? r.pauseOnFocusLoss : _.pauseOnFocusLoss,\n      draggable: d(r.draggable) ? r.draggable : _.draggable,\n      draggablePercent: r.draggablePercent || _.draggablePercent,\n      draggableDirection: r.draggableDirection || _.draggableDirection,\n      closeOnClick: d(r.closeOnClick) ? r.closeOnClick : _.closeOnClick,\n      progressClassName: f(r.progressClassName || _.progressClassName),\n      progressStyle: r.progressStyle || _.progressStyle,\n      autoClose: !r.isLoading && (R = r.autoClose, k = _.autoClose, !1 === R || u(R) && R > 0 ? R : k),\n      hideProgressBar: d(r.hideProgressBar) ? r.hideProgressBar : _.hideProgressBar,\n      progress: r.progress,\n      role: r.role || _.role,\n      deleteToast: function deleteToast() {\n        var e = b(T.get(c), \"removed\");\n        T.delete(c), C.emit(4, e);\n        var t = E.queue.length;\n        if (E.count = g(c) ? E.count - 1 : E.count - E.displayedToast, E.count < 0 && (E.count = 0), t > 0) {\n          var _e = g(c) ? 1 : E.props.limit;\n          if (1 === t || 1 === _e) E.displayedToast++, L();else {\n            var _n2 = _e > t ? t : _e;\n            E.displayedToast = _n2;\n            for (var _e2 = 0; _e2 < _n2; _e2++) {\n              L();\n            }\n          }\n        } else o();\n      }\n    };\n    var R, k;\n    var M = I[B.type],\n      D = {\n        theme: B.theme,\n        type: B.type\n      };\n    B.icon = M && M(D), !1 === B.icon ? B.icon = void 0 : m(B.icon) ? B.icon = B.icon(D) : t(B.icon) ? B.icon = i(B.icon, D) : p(B.icon) ? B.icon = B.icon : B.isLoading && (B.icon = I.spinner()), m(r.onOpen) && (B.onOpen = r.onOpen), m(r.onClose) && (B.onClose = r.onClose), B.closeButton = _.closeButton, !1 === r.closeButton || y(r.closeButton) ? B.closeButton = r.closeButton : !0 === r.closeButton && (B.closeButton = !y(_.closeButton) || _.closeButton);\n    var w = e;\n    t(e) && !p(e.type) ? w = i(e, {\n      closeToast: N,\n      toastProps: B,\n      data: v\n    }) : m(e) && (w = e({\n      closeToast: N,\n      toastProps: B,\n      data: v\n    })), _.limit && _.limit > 0 && E.count > _.limit && x ? E.queue.push({\n      toastContent: w,\n      toastProps: B,\n      staleId: a\n    }) : u(s) ? setTimeout(function () {\n      P(w, B, a);\n    }, s) : P(w, B, a);\n  }\n  function P(e, t, n) {\n    var o = t.toastId;\n    n && T.delete(n);\n    var s = {\n      content: e,\n      props: t\n    };\n    T.set(o, s), l(function (e) {\n      return [].concat(_toConsumableArray(e), [o]).filter(function (e) {\n        return e !== n;\n      });\n    }), C.emit(4, b(s, null == s.props.updateId ? \"added\" : \"updated\"));\n  }\n  return s(function () {\n    return E.containerId = e.containerId, C.cancelEmit(3).on(0, N).on(1, function (e) {\n      return h.current && O(e);\n    }).on(5, _).emit(2, E), function () {\n      return C.emit(3, E);\n    };\n  }, []), s(function () {\n    E.props = e, E.isToastActive = v, E.displayedToast = c.length;\n  }), {\n    getToastToRender: function getToastToRender(t) {\n      var n = new Map(),\n        o = Array.from(T.values());\n      return e.newestOnTop && o.reverse(), o.forEach(function (e) {\n        var t = e.props.position;\n        n.has(t) || n.set(t, []), n.get(t).push(e);\n      }), Array.from(n, function (e) {\n        return t(e[0], e[1]);\n      });\n    },\n    containerRef: h,\n    isToastActive: v\n  };\n}\nfunction L(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\nfunction N(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\nfunction P(e) {\n  var _r3 = r(!1),\n    _r4 = _slicedToArray(_r3, 2),\n    o = _r4[0],\n    a = _r4[1],\n    _r5 = r(!1),\n    _r6 = _slicedToArray(_r5, 2),\n    i = _r6[0],\n    c = _r6[1],\n    l = n(null),\n    u = n({\n      start: 0,\n      x: 0,\n      y: 0,\n      delta: 0,\n      removalDistance: 0,\n      canCloseOnClick: !0,\n      canDrag: !1,\n      boundingRect: null,\n      didMove: !1\n    }).current,\n    d = n(e),\n    p = e.autoClose,\n    f = e.pauseOnHover,\n    g = e.closeToast,\n    y = e.onClick,\n    h = e.closeOnClick;\n  function T(t) {\n    if (e.draggable) {\n      u.didMove = !1, document.addEventListener(\"mousemove\", C), document.addEventListener(\"mouseup\", _), document.addEventListener(\"touchmove\", C), document.addEventListener(\"touchend\", _);\n      var _n3 = l.current;\n      u.canCloseOnClick = !0, u.canDrag = !0, u.boundingRect = _n3.getBoundingClientRect(), _n3.style.transition = \"\", u.x = L(t.nativeEvent), u.y = N(t.nativeEvent), \"x\" === e.draggableDirection ? (u.start = u.x, u.removalDistance = _n3.offsetWidth * (e.draggablePercent / 100)) : (u.start = u.y, u.removalDistance = _n3.offsetHeight * (80 === e.draggablePercent ? 1.5 * e.draggablePercent : e.draggablePercent / 100));\n    }\n  }\n  function v() {\n    if (u.boundingRect) {\n      var _u$boundingRect = u.boundingRect,\n        _t = _u$boundingRect.top,\n        _n4 = _u$boundingRect.bottom,\n        _o = _u$boundingRect.left,\n        _s = _u$boundingRect.right;\n      e.pauseOnHover && u.x >= _o && u.x <= _s && u.y >= _t && u.y <= _n4 ? b() : E();\n    }\n  }\n  function E() {\n    a(!0);\n  }\n  function b() {\n    a(!1);\n  }\n  function C(t) {\n    var n = l.current;\n    u.canDrag && n && (u.didMove = !0, o && b(), u.x = L(t), u.y = N(t), u.delta = \"x\" === e.draggableDirection ? u.x - u.start : u.y - u.start, u.start !== u.x && (u.canCloseOnClick = !1), n.style.transform = \"translate\" + e.draggableDirection + \"(\" + u.delta + \"px)\", n.style.opacity = \"\" + (1 - Math.abs(u.delta / u.removalDistance)));\n  }\n  function _() {\n    document.removeEventListener(\"mousemove\", C), document.removeEventListener(\"mouseup\", _), document.removeEventListener(\"touchmove\", C), document.removeEventListener(\"touchend\", _);\n    var t = l.current;\n    if (u.canDrag && u.didMove && t) {\n      if (u.canDrag = !1, Math.abs(u.delta) > u.removalDistance) return c(!0), void e.closeToast();\n      t.style.transition = \"transform 0.2s, opacity 0.2s\", t.style.transform = \"translate\" + e.draggableDirection + \"(0)\", t.style.opacity = \"1\";\n    }\n  }\n  s(function () {\n    d.current = e;\n  }), s(function () {\n    return l.current && l.current.addEventListener(\"d\", E, {\n      once: !0\n    }), m(e.onOpen) && e.onOpen(t(e.children) && e.children.props), function () {\n      var e = d.current;\n      m(e.onClose) && e.onClose(t(e.children) && e.children.props);\n    };\n  }, []), s(function () {\n    return e.pauseOnFocusLoss && (document.hasFocus() || b(), window.addEventListener(\"focus\", E), window.addEventListener(\"blur\", b)), function () {\n      e.pauseOnFocusLoss && (window.removeEventListener(\"focus\", E), window.removeEventListener(\"blur\", b));\n    };\n  }, [e.pauseOnFocusLoss]);\n  var I = {\n    onMouseDown: T,\n    onTouchStart: T,\n    onMouseUp: v,\n    onTouchEnd: v\n  };\n  return p && f && (I.onMouseEnter = b, I.onMouseLeave = E), h && (I.onClick = function (e) {\n    y && y(e), u.canCloseOnClick && g();\n  }), {\n    playToast: E,\n    pauseToast: b,\n    isRunning: o,\n    preventExitTransition: i,\n    toastRef: l,\n    eventHandlers: I\n  };\n}\nfunction x(t) {\n  var n = t.closeToast,\n    o = t.theme,\n    _t$ariaLabel = t.ariaLabel,\n    s = _t$ariaLabel === void 0 ? \"close\" : _t$ariaLabel;\n  return e.createElement(\"button\", {\n    className: \"Toastify__close-button Toastify__close-button--\" + o,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation(), n(e);\n    },\n    \"aria-label\": s\n  }, e.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, e.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\nfunction B(t) {\n  var n = t.delay,\n    o = t.isRunning,\n    s = t.closeToast,\n    a = t.type,\n    r = t.hide,\n    i = t.className,\n    c = t.style,\n    u = t.controlledProgress,\n    d = t.progress,\n    p = t.rtl,\n    f = t.isIn,\n    g = t.theme;\n  var y = _objectSpread(_objectSpread({}, c), {}, {\n    animationDuration: n + \"ms\",\n    animationPlayState: o ? \"running\" : \"paused\",\n    opacity: r ? 0 : 1\n  });\n  u && (y.transform = \"scaleX(\" + d + \")\");\n  var h = l(\"Toastify__progress-bar\", u ? \"Toastify__progress-bar--controlled\" : \"Toastify__progress-bar--animated\", \"Toastify__progress-bar-theme--\" + g, \"Toastify__progress-bar--\" + a, {\n      \"Toastify__progress-bar--rtl\": p\n    }),\n    T = m(i) ? i({\n      rtl: p,\n      type: a,\n      defaultClassName: h\n    }) : l(h, i);\n  return e.createElement(\"div\", _defineProperty({\n    role: \"progressbar\",\n    \"aria-hidden\": r ? \"true\" : \"false\",\n    \"aria-label\": \"notification timer\",\n    className: T,\n    style: y\n  }, u && d >= 1 ? \"onTransitionEnd\" : \"onAnimationEnd\", u && d < 1 ? null : function () {\n    f && s();\n  }));\n}\nB.defaultProps = {\n  type: T.DEFAULT,\n  hide: !1\n};\nvar R = function R(t) {\n    var _P = P(t),\n      n = _P.isRunning,\n      o = _P.preventExitTransition,\n      s = _P.toastRef,\n      a = _P.eventHandlers,\n      r = t.closeButton,\n      i = t.children,\n      c = t.autoClose,\n      u = t.onClick,\n      d = t.type,\n      p = t.hideProgressBar,\n      f = t.closeToast,\n      g = t.transition,\n      y = t.position,\n      h = t.className,\n      T = t.style,\n      v = t.bodyClassName,\n      E = t.bodyStyle,\n      b = t.progressClassName,\n      C = t.progressStyle,\n      _ = t.updateId,\n      I = t.role,\n      O = t.progress,\n      L = t.rtl,\n      N = t.toastId,\n      x = t.deleteToast,\n      R = t.isIn,\n      k = t.isLoading,\n      M = t.icon,\n      D = t.theme,\n      w = l(\"Toastify__toast\", \"Toastify__toast-theme--\" + D, \"Toastify__toast--\" + d, {\n        \"Toastify__toast--rtl\": L\n      }),\n      A = m(h) ? h({\n        rtl: L,\n        position: y,\n        type: d,\n        defaultClassName: w\n      }) : l(w, h),\n      F = !!O;\n    return e.createElement(g, {\n      isIn: R,\n      done: x,\n      position: y,\n      preventExitTransition: o,\n      nodeRef: s\n    }, e.createElement(\"div\", _objectSpread(_objectSpread({\n      id: N,\n      onClick: u,\n      className: A\n    }, a), {}, {\n      style: T,\n      ref: s\n    }), e.createElement(\"div\", _objectSpread(_objectSpread({}, R && {\n      role: I\n    }), {}, {\n      className: m(v) ? v({\n        type: d\n      }) : l(\"Toastify__toast-body\", v),\n      style: E\n    }), M && e.createElement(\"div\", {\n      className: l(\"Toastify__toast-icon\", {\n        \"Toastify--animate-icon Toastify__zoom-enter\": !k\n      })\n    }, M), e.createElement(\"div\", null, i)), function (t) {\n      if (!t) return;\n      var n = {\n        closeToast: f,\n        type: d,\n        theme: D\n      };\n      return m(t) ? t(n) : e.isValidElement(t) ? e.cloneElement(t, n) : void 0;\n    }(r), (c || F) && e.createElement(B, _objectSpread(_objectSpread({}, _ && !F ? {\n      key: \"pb-\" + _\n    } : {}), {}, {\n      rtl: L,\n      theme: D,\n      delay: c,\n      isRunning: n,\n      isIn: R,\n      closeToast: f,\n      hide: p,\n      type: d,\n      style: C,\n      className: b,\n      controlledProgress: F,\n      progress: O\n    }))));\n  },\n  k = E({\n    enter: \"Toastify--animate Toastify__bounce-enter\",\n    exit: \"Toastify--animate Toastify__bounce-exit\",\n    appendPosition: !0\n  }),\n  M = E({\n    enter: \"Toastify--animate Toastify__slide-enter\",\n    exit: \"Toastify--animate Toastify__slide-exit\",\n    appendPosition: !0\n  }),\n  D = E({\n    enter: \"Toastify--animate Toastify__zoom-enter\",\n    exit: \"Toastify--animate Toastify__zoom-exit\"\n  }),\n  w = E({\n    enter: \"Toastify--animate Toastify__flip-enter\",\n    exit: \"Toastify--animate Toastify__flip-exit\"\n  }),\n  A = c(function (t, n) {\n    var _O = O(t),\n      o = _O.getToastToRender,\n      a = _O.containerRef,\n      r = _O.isToastActive,\n      i = t.className,\n      c = t.style,\n      u = t.rtl,\n      d = t.containerId;\n    function p(e) {\n      var t = l(\"Toastify__toast-container\", \"Toastify__toast-container--\" + e, {\n        \"Toastify__toast-container--rtl\": u\n      });\n      return m(i) ? i({\n        position: e,\n        rtl: u,\n        defaultClassName: t\n      }) : l(t, f(i));\n    }\n    return s(function () {\n      n && (n.current = a.current);\n    }, []), e.createElement(\"div\", {\n      ref: a,\n      className: \"Toastify\",\n      id: d\n    }, o(function (t, n) {\n      var o = n.length ? _objectSpread({}, c) : _objectSpread(_objectSpread({}, c), {}, {\n        pointerEvents: \"none\"\n      });\n      return e.createElement(\"div\", {\n        className: p(t),\n        style: o,\n        key: \"container-\" + t\n      }, n.map(function (t, o) {\n        var s = t.content,\n          a = t.props;\n        return e.createElement(R, _objectSpread(_objectSpread({}, a), {}, {\n          isIn: r(a.toastId),\n          style: {\n            \"--nth\": o + 1,\n            \"--len\": n.length\n          },\n          key: \"toast-\" + a.key,\n          closeButton: !0 === a.closeButton ? x : a.closeButton\n        }), s);\n      }));\n    }));\n  });\nA.displayName = \"ToastContainer\", A.defaultProps = {\n  position: h.TOP_RIGHT,\n  transition: k,\n  rtl: !1,\n  autoClose: 5e3,\n  hideProgressBar: !1,\n  closeButton: x,\n  pauseOnHover: !0,\n  pauseOnFocusLoss: !0,\n  closeOnClick: !0,\n  newestOnTop: !1,\n  draggable: !0,\n  draggablePercent: 80,\n  draggableDirection: \"x\",\n  role: \"alert\",\n  theme: \"light\"\n};\nvar F,\n  S = new Map(),\n  z = [];\nfunction H() {\n  return Math.random().toString(36).substring(2, 9);\n}\nfunction q(e) {\n  return e && (p(e.toastId) || u(e.toastId)) ? e.toastId : H();\n}\nfunction U(e, t) {\n  return S.size > 0 ? C.emit(0, e, t) : z.push({\n    content: e,\n    options: t\n  }), t.toastId;\n}\nfunction Q(e, t) {\n  return _objectSpread(_objectSpread({}, t), {}, {\n    type: t && t.type || e,\n    toastId: q(t)\n  });\n}\nfunction G(e) {\n  return function (t, n) {\n    return U(t, Q(e, n));\n  };\n}\nfunction W(e, t) {\n  return U(e, Q(T.DEFAULT, t));\n}\nW.loading = function (e, t) {\n  return U(e, Q(T.DEFAULT, _objectSpread({\n    isLoading: !0,\n    autoClose: !1,\n    closeOnClick: !1,\n    closeButton: !1,\n    draggable: !1\n  }, t)));\n}, W.promise = function (e, t, n) {\n  var o,\n    s = t.pending,\n    a = t.error,\n    r = t.success;\n  s && (o = p(s) ? W.loading(s, n) : W.loading(s.render, _objectSpread(_objectSpread({}, n), s)));\n  var i = {\n      isLoading: null,\n      autoClose: null,\n      closeOnClick: null,\n      closeButton: null,\n      draggable: null,\n      delay: 100\n    },\n    c = function c(e, t, s) {\n      if (null == t) return void W.dismiss(o);\n      var a = _objectSpread(_objectSpread(_objectSpread({\n          type: e\n        }, i), n), {}, {\n          data: s\n        }),\n        r = p(t) ? {\n          render: t\n        } : t;\n      return o ? W.update(o, _objectSpread(_objectSpread({}, a), r)) : W(r.render, _objectSpread(_objectSpread({}, a), r)), s;\n    },\n    l = m(e) ? e() : e;\n  return l.then(function (e) {\n    return c(\"success\", r, e);\n  }).catch(function (e) {\n    return c(\"error\", a, e);\n  }), l;\n}, W.success = G(T.SUCCESS), W.info = G(T.INFO), W.error = G(T.ERROR), W.warning = G(T.WARNING), W.warn = W.warning, W.dark = function (e, t) {\n  return U(e, Q(T.DEFAULT, _objectSpread({\n    theme: \"dark\"\n  }, t)));\n}, W.dismiss = function (e) {\n  return C.emit(1, e);\n}, W.clearWaitingQueue = function (e) {\n  return void 0 === e && (e = {}), C.emit(5, e);\n}, W.isActive = function (e) {\n  var t = !1;\n  return S.forEach(function (n) {\n    n.isToastActive && n.isToastActive(e) && (t = !0);\n  }), t;\n}, W.update = function (e, t) {\n  void 0 === t && (t = {}), setTimeout(function () {\n    var n = function (e, t) {\n      var n = t.containerId;\n      var o = S.get(n || F);\n      return o ? o.getToast(e) : null;\n    }(e, t);\n    if (n) {\n      var _o2 = n.props,\n        _s2 = n.content,\n        _a3 = _objectSpread(_objectSpread(_objectSpread({}, _o2), t), {}, {\n          toastId: t.toastId || e,\n          updateId: H()\n        });\n      _a3.toastId !== e && (_a3.staleId = e);\n      var _r7 = _a3.render || _s2;\n      delete _a3.render, U(_r7, _a3);\n    }\n  }, 0);\n}, W.done = function (e) {\n  W.update(e, {\n    progress: 1\n  });\n}, W.onChange = function (e) {\n  return C.on(4, e), function () {\n    C.off(4, e);\n  };\n}, W.POSITION = h, W.TYPE = T, C.on(2, function (e) {\n  F = e.containerId || e, S.set(F, e), z.forEach(function (e) {\n    C.emit(0, e.content, e.options);\n  }), z = [];\n}).on(3, function (e) {\n  S.delete(e.containerId || e), 0 === S.size && C.off(0).off(1).off(5);\n});\nexport { k as Bounce, w as Flip, I as Icons, M as Slide, A as ToastContainer, D as Zoom, v as collapseToast, E as cssTransition, W as toast, P as useToast, O as useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","collapseDuration","exit","appendPosition","collapse","children","isIn","position","preventExitTransition","nodeRef","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","e","target","current","dispatchEvent","Event","removeEventListener","type","className","onExited","useLayoutEffect","addEventListener","onEnter","useEffect","onExit","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","_ref","rest","viewBox","width","fill","Icons","info","d","warning","success","error","spinner","useToastContainer","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","length","removeToast","state","dequeueToast","shift","toastContent","toastProps","staleId","appendToast","buildToast","delay","options","enableMultiContainer","updateId","isNotValid","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","toastAutoClose","containerAutoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","maybeIcon","iconProps","cloneElement","onOpen","onClose","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","hasFocus","window","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","t","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","defaultProps","Toast","Transition","Icon","cssClasses","isProgressControlled","ref","renderCloseButton","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"sources":["../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/utils/mapper.ts","../src/core/eventManager.ts","../src/components/Icons.tsx","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastContainer.tsx","../src/core/toast.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { Icons } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    const maybeIcon = Icons[toastProps.type as keyof typeof Icons];\n    const iconProps = { theme: toastProps.theme, type: toastProps.type };\n    toastProps.icon = maybeIcon && maybeIcon(iconProps);\n\n    if (toastProps.icon === false) {\n      toastProps.icon = void 0;\n    } else if (isFn(toastProps.icon)) {\n      toastProps.icon = toastProps.icon(iconProps);\n    } else if (isValidElement(toastProps.icon)) {\n      toastProps.icon = cloneElement(toastProps.icon, iconProps);\n    } else if (isStr(toastProps.icon)) {\n      toastProps.icon = toastProps.icon;\n    } else if (toastProps.isLoading) {\n      toastProps.icon = Icons.spinner();\n    }\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon: Icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}