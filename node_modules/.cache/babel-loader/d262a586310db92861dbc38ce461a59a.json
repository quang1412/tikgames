{"ast":null,"code":"import * as PIXI from \"https://cdn.skypack.dev/pixi.js@5.x\";\nimport { KawaseBlurFilter } from \"https://cdn.skypack.dev/@pixi/filter-kawase-blur@3.2.0\";\nimport SimplexNoise from \"https://cdn.skypack.dev/simplex-noise@3.0.0\";\nimport hsl from \"https://cdn.skypack.dev/hsl-to-hex\";\nimport debounce from \"https://cdn.skypack.dev/debounce\";\n\n// return a random number within a range\nfunction random(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// map a number from 1 range to another\nfunction map(n, start1, end1, start2, end2) {\n  return (n - start1) / (end1 - start1) * (end2 - start2) + start2;\n}\n\n// Create a new simplex noise instance\nconst simplex = new SimplexNoise();\n\n// ColorPalette class\nclass ColorPalette {\n  constructor() {\n    this.setColors();\n    this.setCustomProperties();\n  }\n  setColors() {\n    // pick a random hue somewhere between 220 and 360\n    this.hue = ~~random(220, 360);\n    this.complimentaryHue1 = this.hue + 30;\n    this.complimentaryHue2 = this.hue + 60;\n    // define a fixed saturation and lightness\n    this.saturation = 95;\n    this.lightness = 50;\n\n    // define a base color\n    this.baseColor = hsl(this.hue, this.saturation, this.lightness);\n    // define a complimentary color, 30 degress away from the base\n    this.complimentaryColor1 = hsl(this.complimentaryHue1, this.saturation, this.lightness);\n    // define a second complimentary color, 60 degrees away from the base\n    this.complimentaryColor2 = hsl(this.complimentaryHue2, this.saturation, this.lightness);\n\n    // store the color choices in an array so that a random one can be picked later\n    this.colorChoices = [this.baseColor, this.complimentaryColor1, this.complimentaryColor2];\n  }\n  randomColor() {\n    // pick a random color\n    return this.colorChoices[~~random(0, this.colorChoices.length)].replace(\"#\", \"0x\");\n  }\n  setCustomProperties() {\n    // set CSS custom properties so that the colors defined here can be used throughout the UI\n    document.documentElement.style.setProperty(\"--hue\", this.hue);\n    document.documentElement.style.setProperty(\"--hue-complimentary1\", this.complimentaryHue1);\n    document.documentElement.style.setProperty(\"--hue-complimentary2\", this.complimentaryHue2);\n  }\n}\n\n// Orb class\nclass Orb {\n  // Pixi takes hex colors as hexidecimal literals (0x rather than a string with '#')\n  constructor() {\n    let fill = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0x000000;\n    // bounds = the area an orb is \"allowed\" to move within\n    this.bounds = this.setBounds();\n    // initialise the orb's { x, y } values to a random point within it's bounds\n    this.x = random(this.bounds[\"x\"].min, this.bounds[\"x\"].max);\n    this.y = random(this.bounds[\"y\"].min, this.bounds[\"y\"].max);\n\n    // how large the orb is vs it's original radius (this will modulate over time)\n    this.scale = 1;\n\n    // what color is the orb?\n    this.fill = fill;\n\n    // the original radius of the orb, set relative to window height\n    this.radius = random(window.innerHeight / 6, window.innerHeight / 3);\n\n    // starting points in \"time\" for the noise/self similar random values\n    this.xOff = random(0, 1000);\n    this.yOff = random(0, 1000);\n    // how quickly the noise/self similar random values step through time\n    this.inc = 0.002;\n\n    // PIXI.Graphics is used to draw 2d primitives (in this case a circle) to the canvas\n    this.graphics = new PIXI.Graphics();\n    this.graphics.alpha = 0.825;\n\n    // 250ms after the last window resize event, recalculate orb positions.\n    window.addEventListener(\"resize\", debounce(() => {\n      this.bounds = this.setBounds();\n    }, 250));\n  }\n  setBounds() {\n    // how far from the { x, y } origin can each orb move\n    const maxDist = window.innerWidth < 1000 ? window.innerWidth / 3 : window.innerWidth / 5;\n    // the { x, y } origin for each orb (the bottom right of the screen)\n    const originX = window.innerWidth / 1.25;\n    const originY = window.innerWidth < 1000 ? window.innerHeight : window.innerHeight / 1.375;\n\n    // allow each orb to move x distance away from it's x / y origin\n    return {\n      x: {\n        min: originX - maxDist,\n        max: originX + maxDist\n      },\n      y: {\n        min: originY - maxDist,\n        max: originY + maxDist\n      }\n    };\n  }\n  update() {\n    // self similar \"psuedo-random\" or noise values at a given point in \"time\"\n    const xNoise = simplex.noise2D(this.xOff, this.xOff);\n    const yNoise = simplex.noise2D(this.yOff, this.yOff);\n    const scaleNoise = simplex.noise2D(this.xOff, this.yOff);\n\n    // map the xNoise/yNoise values (between -1 and 1) to a point within the orb's bounds\n    this.x = map(xNoise, -1, 1, this.bounds[\"x\"].min, this.bounds[\"x\"].max);\n    this.y = map(yNoise, -1, 1, this.bounds[\"y\"].min, this.bounds[\"y\"].max);\n    // map scaleNoise (between -1 and 1) to a scale value somewhere between half of the orb's original size, and 100% of it's original size\n    this.scale = map(scaleNoise, -1, 1, 0.5, 1);\n\n    // step through \"time\"\n    this.xOff += this.inc;\n    this.yOff += this.inc;\n  }\n  render() {\n    // update the PIXI.Graphics position and scale values\n    this.graphics.x = this.x;\n    this.graphics.y = this.y;\n    this.graphics.scale.set(this.scale);\n\n    // clear anything currently drawn to graphics\n    this.graphics.clear();\n\n    // tell graphics to fill any shapes drawn after this with the orb's fill color\n    this.graphics.beginFill(this.fill);\n    // draw a circle at { 0, 0 } with it's size set by this.radius\n    this.graphics.drawCircle(0, 0, this.radius);\n    // let graphics know we won't be filling in any more shapes\n    this.graphics.endFill();\n  }\n}\n\n// Create PixiJS app\nconst app = new PIXI.Application({\n  // render to <canvas class=\"orb-canvas\"></canvas>\n  view: document.querySelector(\".orb-canvas\"),\n  // auto adjust size to fit the current window\n  resizeTo: window,\n  // transparent background, we will be creating a gradient background later using CSS\n  transparent: true\n});\napp.stage.filters = [new KawaseBlurFilter(30, 10, true)];\n\n// Create colour palette\nconst colorPalette = new ColorPalette();\n\n// Create orbs\nconst orbs = [];\nfor (let i = 0; i < 10; i++) {\n  const orb = new Orb(colorPalette.randomColor());\n  app.stage.addChild(orb.graphics);\n  orbs.push(orb);\n}\n\n// Animate!\nif (!window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches) {\n  app.ticker.add(() => {\n    orbs.forEach(orb => {\n      orb.update();\n      orb.render();\n    });\n  });\n} else {\n  orbs.forEach(orb => {\n    orb.update();\n    orb.render();\n  });\n}\ndocument.querySelector(\".overlay__btn--colors\").addEventListener(\"click\", () => {\n  colorPalette.setColors();\n  colorPalette.setCustomProperties();\n  orbs.forEach(orb => {\n    orb.fill = colorPalette.randomColor();\n  });\n});","map":{"version":3,"names":["PIXI","KawaseBlurFilter","SimplexNoise","hsl","debounce","random","min","max","Math","map","n","start1","end1","start2","end2","simplex","ColorPalette","constructor","setColors","setCustomProperties","hue","complimentaryHue1","complimentaryHue2","saturation","lightness","baseColor","complimentaryColor1","complimentaryColor2","colorChoices","randomColor","length","replace","document","documentElement","style","setProperty","Orb","fill","bounds","setBounds","x","y","scale","radius","window","innerHeight","xOff","yOff","inc","graphics","Graphics","alpha","addEventListener","maxDist","innerWidth","originX","originY","update","xNoise","noise2D","yNoise","scaleNoise","render","set","clear","beginFill","drawCircle","endFill","app","Application","view","querySelector","resizeTo","transparent","stage","filters","colorPalette","orbs","i","orb","addChild","push","matchMedia","matches","ticker","add","forEach"],"sources":["/Users/trinhdacquang/React/tikgames/src/libs/js/background.js"],"sourcesContent":["import * as PIXI from \"https://cdn.skypack.dev/pixi.js@5.x\"\nimport { KawaseBlurFilter } from \"https://cdn.skypack.dev/@pixi/filter-kawase-blur@3.2.0\"\nimport SimplexNoise from \"https://cdn.skypack.dev/simplex-noise@3.0.0\"\nimport hsl from \"https://cdn.skypack.dev/hsl-to-hex\"\nimport debounce from \"https://cdn.skypack.dev/debounce\"\n\n// return a random number within a range\nfunction random(min, max) {\n  return Math.random() * (max - min) + min\n}\n\n// map a number from 1 range to another\nfunction map(n, start1, end1, start2, end2) {\n  return ((n - start1) / (end1 - start1)) * (end2 - start2) + start2\n}\n\n// Create a new simplex noise instance\nconst simplex = new SimplexNoise()\n\n// ColorPalette class\nclass ColorPalette {\n  constructor() {\n    this.setColors()\n    this.setCustomProperties()\n  }\n\n  setColors() {\n    // pick a random hue somewhere between 220 and 360\n    this.hue = ~~random(220, 360)\n    this.complimentaryHue1 = this.hue + 30\n    this.complimentaryHue2 = this.hue + 60\n    // define a fixed saturation and lightness\n    this.saturation = 95\n    this.lightness = 50\n\n    // define a base color\n    this.baseColor = hsl(this.hue, this.saturation, this.lightness)\n    // define a complimentary color, 30 degress away from the base\n    this.complimentaryColor1 = hsl(\n      this.complimentaryHue1,\n      this.saturation,\n      this.lightness\n    )\n    // define a second complimentary color, 60 degrees away from the base\n    this.complimentaryColor2 = hsl(\n      this.complimentaryHue2,\n      this.saturation,\n      this.lightness\n    )\n\n    // store the color choices in an array so that a random one can be picked later\n    this.colorChoices = [\n      this.baseColor,\n      this.complimentaryColor1,\n      this.complimentaryColor2,\n    ]\n  }\n\n  randomColor() {\n    // pick a random color\n    return this.colorChoices[~~random(0, this.colorChoices.length)].replace(\n      \"#\",\n      \"0x\"\n    )\n  }\n\n  setCustomProperties() {\n    // set CSS custom properties so that the colors defined here can be used throughout the UI\n    document.documentElement.style.setProperty(\"--hue\", this.hue)\n    document.documentElement.style.setProperty(\n      \"--hue-complimentary1\",\n      this.complimentaryHue1\n    )\n    document.documentElement.style.setProperty(\n      \"--hue-complimentary2\",\n      this.complimentaryHue2\n    )\n  }\n}\n\n// Orb class\nclass Orb {\n  // Pixi takes hex colors as hexidecimal literals (0x rather than a string with '#')\n  constructor(fill = 0x000000) {\n    // bounds = the area an orb is \"allowed\" to move within\n    this.bounds = this.setBounds()\n    // initialise the orb's { x, y } values to a random point within it's bounds\n    this.x = random(this.bounds[\"x\"].min, this.bounds[\"x\"].max)\n    this.y = random(this.bounds[\"y\"].min, this.bounds[\"y\"].max)\n\n    // how large the orb is vs it's original radius (this will modulate over time)\n    this.scale = 1\n\n    // what color is the orb?\n    this.fill = fill\n\n    // the original radius of the orb, set relative to window height\n    this.radius = random(window.innerHeight / 6, window.innerHeight / 3)\n\n    // starting points in \"time\" for the noise/self similar random values\n    this.xOff = random(0, 1000)\n    this.yOff = random(0, 1000)\n    // how quickly the noise/self similar random values step through time\n    this.inc = 0.002\n\n    // PIXI.Graphics is used to draw 2d primitives (in this case a circle) to the canvas\n    this.graphics = new PIXI.Graphics()\n    this.graphics.alpha = 0.825\n\n    // 250ms after the last window resize event, recalculate orb positions.\n    window.addEventListener(\n      \"resize\",\n      debounce(() => {\n        this.bounds = this.setBounds()\n      }, 250)\n    )\n  }\n\n  setBounds() {\n    // how far from the { x, y } origin can each orb move\n    const maxDist =\n      window.innerWidth < 1000 ? window.innerWidth / 3 : window.innerWidth / 5\n    // the { x, y } origin for each orb (the bottom right of the screen)\n    const originX = window.innerWidth / 1.25\n    const originY =\n      window.innerWidth < 1000 ? window.innerHeight : window.innerHeight / 1.375\n\n    // allow each orb to move x distance away from it's x / y origin\n    return {\n      x: {\n        min: originX - maxDist,\n        max: originX + maxDist,\n      },\n      y: {\n        min: originY - maxDist,\n        max: originY + maxDist,\n      },\n    }\n  }\n\n  update() {\n    // self similar \"psuedo-random\" or noise values at a given point in \"time\"\n    const xNoise = simplex.noise2D(this.xOff, this.xOff)\n    const yNoise = simplex.noise2D(this.yOff, this.yOff)\n    const scaleNoise = simplex.noise2D(this.xOff, this.yOff)\n\n    // map the xNoise/yNoise values (between -1 and 1) to a point within the orb's bounds\n    this.x = map(xNoise, -1, 1, this.bounds[\"x\"].min, this.bounds[\"x\"].max)\n    this.y = map(yNoise, -1, 1, this.bounds[\"y\"].min, this.bounds[\"y\"].max)\n    // map scaleNoise (between -1 and 1) to a scale value somewhere between half of the orb's original size, and 100% of it's original size\n    this.scale = map(scaleNoise, -1, 1, 0.5, 1)\n\n    // step through \"time\"\n    this.xOff += this.inc\n    this.yOff += this.inc\n  }\n\n  render() {\n    // update the PIXI.Graphics position and scale values\n    this.graphics.x = this.x\n    this.graphics.y = this.y\n    this.graphics.scale.set(this.scale)\n\n    // clear anything currently drawn to graphics\n    this.graphics.clear()\n\n    // tell graphics to fill any shapes drawn after this with the orb's fill color\n    this.graphics.beginFill(this.fill)\n    // draw a circle at { 0, 0 } with it's size set by this.radius\n    this.graphics.drawCircle(0, 0, this.radius)\n    // let graphics know we won't be filling in any more shapes\n    this.graphics.endFill()\n  }\n}\n\n// Create PixiJS app\nconst app = new PIXI.Application({\n  // render to <canvas class=\"orb-canvas\"></canvas>\n  view: document.querySelector(\".orb-canvas\"),\n  // auto adjust size to fit the current window\n  resizeTo: window,\n  // transparent background, we will be creating a gradient background later using CSS\n  transparent: true,\n})\n\napp.stage.filters = [new KawaseBlurFilter(30, 10, true)]\n\n// Create colour palette\nconst colorPalette = new ColorPalette()\n\n// Create orbs\nconst orbs = []\n\nfor (let i = 0; i < 10; i++) {\n  const orb = new Orb(colorPalette.randomColor())\n\n  app.stage.addChild(orb.graphics)\n\n  orbs.push(orb)\n}\n\n// Animate!\nif (!window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches) {\n  app.ticker.add(() => {\n    orbs.forEach((orb) => {\n      orb.update()\n      orb.render()\n    })\n  })\n} else {\n  orbs.forEach((orb) => {\n    orb.update()\n    orb.render()\n  })\n}\n\ndocument\n  .querySelector(\".overlay__btn--colors\")\n  .addEventListener(\"click\", () => {\n    colorPalette.setColors()\n    colorPalette.setCustomProperties()\n\n    orbs.forEach((orb) => {\n      orb.fill = colorPalette.randomColor()\n    })\n  })\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,qCAAqC;AAC3D,SAASC,gBAAgB,QAAQ,wDAAwD;AACzF,OAAOC,YAAY,MAAM,6CAA6C;AACtE,OAAOC,GAAG,MAAM,oCAAoC;AACpD,OAAOC,QAAQ,MAAM,kCAAkC;;AAEvD;AACA,SAASC,MAAM,CAACC,GAAG,EAAEC,GAAG,EAAE;EACxB,OAAOC,IAAI,CAACH,MAAM,EAAE,IAAIE,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAC1C;;AAEA;AACA,SAASG,GAAG,CAACC,CAAC,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;EAC1C,OAAQ,CAACJ,CAAC,GAAGC,MAAM,KAAKC,IAAI,GAAGD,MAAM,CAAC,IAAKG,IAAI,GAAGD,MAAM,CAAC,GAAGA,MAAM;AACpE;;AAEA;AACA,MAAME,OAAO,GAAG,IAAIb,YAAY,EAAE;;AAElC;AACA,MAAMc,YAAY,CAAC;EACjBC,WAAW,GAAG;IACZ,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEAD,SAAS,GAAG;IACV;IACA,IAAI,CAACE,GAAG,GAAG,CAAC,CAACf,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;IAC7B,IAAI,CAACgB,iBAAiB,GAAG,IAAI,CAACD,GAAG,GAAG,EAAE;IACtC,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACF,GAAG,GAAG,EAAE;IACtC;IACA,IAAI,CAACG,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,SAAS,GAAG,EAAE;;IAEnB;IACA,IAAI,CAACC,SAAS,GAAGtB,GAAG,CAAC,IAAI,CAACiB,GAAG,EAAE,IAAI,CAACG,UAAU,EAAE,IAAI,CAACC,SAAS,CAAC;IAC/D;IACA,IAAI,CAACE,mBAAmB,GAAGvB,GAAG,CAC5B,IAAI,CAACkB,iBAAiB,EACtB,IAAI,CAACE,UAAU,EACf,IAAI,CAACC,SAAS,CACf;IACD;IACA,IAAI,CAACG,mBAAmB,GAAGxB,GAAG,CAC5B,IAAI,CAACmB,iBAAiB,EACtB,IAAI,CAACC,UAAU,EACf,IAAI,CAACC,SAAS,CACf;;IAED;IACA,IAAI,CAACI,YAAY,GAAG,CAClB,IAAI,CAACH,SAAS,EACd,IAAI,CAACC,mBAAmB,EACxB,IAAI,CAACC,mBAAmB,CACzB;EACH;EAEAE,WAAW,GAAG;IACZ;IACA,OAAO,IAAI,CAACD,YAAY,CAAC,CAAC,CAACvB,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuB,YAAY,CAACE,MAAM,CAAC,CAAC,CAACC,OAAO,CACrE,GAAG,EACH,IAAI,CACL;EACH;EAEAZ,mBAAmB,GAAG;IACpB;IACAa,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,OAAO,EAAE,IAAI,CAACf,GAAG,CAAC;IAC7DY,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CACxC,sBAAsB,EACtB,IAAI,CAACd,iBAAiB,CACvB;IACDW,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CACxC,sBAAsB,EACtB,IAAI,CAACb,iBAAiB,CACvB;EACH;AACF;;AAEA;AACA,MAAMc,GAAG,CAAC;EACR;EACAnB,WAAW,GAAkB;IAAA,IAAjBoB,IAAI,uEAAG,QAAQ;IACzB;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAC9B;IACA,IAAI,CAACC,CAAC,GAAGnC,MAAM,CAAC,IAAI,CAACiC,MAAM,CAAC,GAAG,CAAC,CAAChC,GAAG,EAAE,IAAI,CAACgC,MAAM,CAAC,GAAG,CAAC,CAAC/B,GAAG,CAAC;IAC3D,IAAI,CAACkC,CAAC,GAAGpC,MAAM,CAAC,IAAI,CAACiC,MAAM,CAAC,GAAG,CAAC,CAAChC,GAAG,EAAE,IAAI,CAACgC,MAAM,CAAC,GAAG,CAAC,CAAC/B,GAAG,CAAC;;IAE3D;IACA,IAAI,CAACmC,KAAK,GAAG,CAAC;;IAEd;IACA,IAAI,CAACL,IAAI,GAAGA,IAAI;;IAEhB;IACA,IAAI,CAACM,MAAM,GAAGtC,MAAM,CAACuC,MAAM,CAACC,WAAW,GAAG,CAAC,EAAED,MAAM,CAACC,WAAW,GAAG,CAAC,CAAC;;IAEpE;IACA,IAAI,CAACC,IAAI,GAAGzC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;IAC3B,IAAI,CAAC0C,IAAI,GAAG1C,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;IAC3B;IACA,IAAI,CAAC2C,GAAG,GAAG,KAAK;;IAEhB;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIjD,IAAI,CAACkD,QAAQ,EAAE;IACnC,IAAI,CAACD,QAAQ,CAACE,KAAK,GAAG,KAAK;;IAE3B;IACAP,MAAM,CAACQ,gBAAgB,CACrB,QAAQ,EACRhD,QAAQ,CAAC,MAAM;MACb,IAAI,CAACkC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAChC,CAAC,EAAE,GAAG,CAAC,CACR;EACH;EAEAA,SAAS,GAAG;IACV;IACA,MAAMc,OAAO,GACXT,MAAM,CAACU,UAAU,GAAG,IAAI,GAAGV,MAAM,CAACU,UAAU,GAAG,CAAC,GAAGV,MAAM,CAACU,UAAU,GAAG,CAAC;IAC1E;IACA,MAAMC,OAAO,GAAGX,MAAM,CAACU,UAAU,GAAG,IAAI;IACxC,MAAME,OAAO,GACXZ,MAAM,CAACU,UAAU,GAAG,IAAI,GAAGV,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,GAAG,KAAK;;IAE5E;IACA,OAAO;MACLL,CAAC,EAAE;QACDlC,GAAG,EAAEiD,OAAO,GAAGF,OAAO;QACtB9C,GAAG,EAAEgD,OAAO,GAAGF;MACjB,CAAC;MACDZ,CAAC,EAAE;QACDnC,GAAG,EAAEkD,OAAO,GAAGH,OAAO;QACtB9C,GAAG,EAAEiD,OAAO,GAAGH;MACjB;IACF,CAAC;EACH;EAEAI,MAAM,GAAG;IACP;IACA,MAAMC,MAAM,GAAG3C,OAAO,CAAC4C,OAAO,CAAC,IAAI,CAACb,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC;IACpD,MAAMc,MAAM,GAAG7C,OAAO,CAAC4C,OAAO,CAAC,IAAI,CAACZ,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC;IACpD,MAAMc,UAAU,GAAG9C,OAAO,CAAC4C,OAAO,CAAC,IAAI,CAACb,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC;;IAExD;IACA,IAAI,CAACP,CAAC,GAAG/B,GAAG,CAACiD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACpB,MAAM,CAAC,GAAG,CAAC,CAAChC,GAAG,EAAE,IAAI,CAACgC,MAAM,CAAC,GAAG,CAAC,CAAC/B,GAAG,CAAC;IACvE,IAAI,CAACkC,CAAC,GAAGhC,GAAG,CAACmD,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACtB,MAAM,CAAC,GAAG,CAAC,CAAChC,GAAG,EAAE,IAAI,CAACgC,MAAM,CAAC,GAAG,CAAC,CAAC/B,GAAG,CAAC;IACvE;IACA,IAAI,CAACmC,KAAK,GAAGjC,GAAG,CAACoD,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;;IAE3C;IACA,IAAI,CAACf,IAAI,IAAI,IAAI,CAACE,GAAG;IACrB,IAAI,CAACD,IAAI,IAAI,IAAI,CAACC,GAAG;EACvB;EAEAc,MAAM,GAAG;IACP;IACA,IAAI,CAACb,QAAQ,CAACT,CAAC,GAAG,IAAI,CAACA,CAAC;IACxB,IAAI,CAACS,QAAQ,CAACR,CAAC,GAAG,IAAI,CAACA,CAAC;IACxB,IAAI,CAACQ,QAAQ,CAACP,KAAK,CAACqB,GAAG,CAAC,IAAI,CAACrB,KAAK,CAAC;;IAEnC;IACA,IAAI,CAACO,QAAQ,CAACe,KAAK,EAAE;;IAErB;IACA,IAAI,CAACf,QAAQ,CAACgB,SAAS,CAAC,IAAI,CAAC5B,IAAI,CAAC;IAClC;IACA,IAAI,CAACY,QAAQ,CAACiB,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACvB,MAAM,CAAC;IAC3C;IACA,IAAI,CAACM,QAAQ,CAACkB,OAAO,EAAE;EACzB;AACF;;AAEA;AACA,MAAMC,GAAG,GAAG,IAAIpE,IAAI,CAACqE,WAAW,CAAC;EAC/B;EACAC,IAAI,EAAEtC,QAAQ,CAACuC,aAAa,CAAC,aAAa,CAAC;EAC3C;EACAC,QAAQ,EAAE5B,MAAM;EAChB;EACA6B,WAAW,EAAE;AACf,CAAC,CAAC;AAEFL,GAAG,CAACM,KAAK,CAACC,OAAO,GAAG,CAAC,IAAI1E,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;;AAExD;AACA,MAAM2E,YAAY,GAAG,IAAI5D,YAAY,EAAE;;AAEvC;AACA,MAAM6D,IAAI,GAAG,EAAE;AAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC3B,MAAMC,GAAG,GAAG,IAAI3C,GAAG,CAACwC,YAAY,CAAC/C,WAAW,EAAE,CAAC;EAE/CuC,GAAG,CAACM,KAAK,CAACM,QAAQ,CAACD,GAAG,CAAC9B,QAAQ,CAAC;EAEhC4B,IAAI,CAACI,IAAI,CAACF,GAAG,CAAC;AAChB;;AAEA;AACA,IAAI,CAACnC,MAAM,CAACsC,UAAU,CAAC,kCAAkC,CAAC,CAACC,OAAO,EAAE;EAClEf,GAAG,CAACgB,MAAM,CAACC,GAAG,CAAC,MAAM;IACnBR,IAAI,CAACS,OAAO,CAAEP,GAAG,IAAK;MACpBA,GAAG,CAACtB,MAAM,EAAE;MACZsB,GAAG,CAACjB,MAAM,EAAE;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,MAAM;EACLe,IAAI,CAACS,OAAO,CAAEP,GAAG,IAAK;IACpBA,GAAG,CAACtB,MAAM,EAAE;IACZsB,GAAG,CAACjB,MAAM,EAAE;EACd,CAAC,CAAC;AACJ;AAEA9B,QAAQ,CACLuC,aAAa,CAAC,uBAAuB,CAAC,CACtCnB,gBAAgB,CAAC,OAAO,EAAE,MAAM;EAC/BwB,YAAY,CAAC1D,SAAS,EAAE;EACxB0D,YAAY,CAACzD,mBAAmB,EAAE;EAElC0D,IAAI,CAACS,OAAO,CAAEP,GAAG,IAAK;IACpBA,GAAG,CAAC1C,IAAI,GAAGuC,YAAY,CAAC/C,WAAW,EAAE;EACvC,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}